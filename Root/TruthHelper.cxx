#include <TruthAnalysis/TruthHelper.h>

/// this is needed to distribute the algorithm to the workers
ClassImp(TruthHelper)

TruthHelper::TruthHelper(){
   
  m_nEventsMap[361100] =     29979   ; //    $W^+ \to e \nu$ 
  m_nEventsMap[361103] =     39974   ; //    $W^- \to e \nu$ 
//   m_nEventsMap[361100] =     69953   ; //    $W^+ \to e \nu$ 
//   m_nEventsMap[361103] =     69953   ; //    $W^- \to e \nu$ 
  m_nEventsMap[301060] =     500     ; //    $W^+(120, 180) \to e \nu$
  m_nEventsMap[301061] =     250     ; //    $W^+(180, 250) \to e \nu$
  m_nEventsMap[301062] =     140     ; //    $W^+(250, 400) \to e \nu$
  m_nEventsMap[301063] =     100     ; //    $W^+(400, 600) \to e \nu$
  m_nEventsMap[301064] =     50      ; //    $W^+(600, 800) \to e \nu$
  m_nEventsMap[301065] =     50      ; //    $W^+(800, 1000) \to e \nu$      
  m_nEventsMap[301066] =     50      ; //    $W^+(1000, 1250) \to e \nu$     
  m_nEventsMap[301067] =     50      ; //    $W^+(1250, 1500) \to e \nu$     
  m_nEventsMap[301068] =     50      ; //    $W^+(1500, 1750) \to e \nu$     
  m_nEventsMap[301069] =     40      ; //    $W^+(1750, 2000) \to e \nu$     
  m_nEventsMap[301070] =     50      ; //    $W^+(2000, 2250) \to e \nu$     
  m_nEventsMap[301071] =     50      ; //    $W^+(2250, 2500) \to e \nu$     
  m_nEventsMap[301072] =     50      ; //    $W^+(2500, 2750) \to e \nu$     
  m_nEventsMap[301073] =     50      ; //    $W^+(2750, 3000) \to e \nu$     
  m_nEventsMap[301074] =     50      ; //    $W^+(3000, 3500) \to e \nu$     
  m_nEventsMap[301075] =     50      ; //    $W^+(3500, 4000) \to e \nu$     
  m_nEventsMap[301076] =     50      ; //    $W^+(4000, 4500) \to e \nu$     
  m_nEventsMap[301077] =     50      ; //    $W^+(4500, 5000) \to e \nu$     
  m_nEventsMap[301078] =     50      ; //    $W^+(>5000) \to e \nu$  
  m_nEventsMap[301080] =     500     ; //    $W^-(120, 180) \to e \nu$
  m_nEventsMap[301081] =     250     ; //    $W^-(180, 250) \to e \nu$
  m_nEventsMap[301082] =     150     ; //    $W^-(250, 400) \to e \nu$
  m_nEventsMap[301083] =     100     ; //    $W^-(400, 600) \to e \nu$
  m_nEventsMap[301084] =     50      ; //    $W^-(600, 800) \to e \nu$
  m_nEventsMap[301085] =     50      ; //    $W^-(800, 1000) \to e \nu$      
  m_nEventsMap[301086] =     50      ; //    $W^-(1000, 1250) \to e \nu$     
  m_nEventsMap[301087] =     50      ; //    $W^-(1250, 1500) \to e \nu$     
  m_nEventsMap[301088] =     50      ; //    $W^-(1500, 1750) \to e \nu$     
  m_nEventsMap[301089] =     50      ; //    $W^-(1750, 2000) \to e \nu$     
  m_nEventsMap[301090] =     50      ; //    $W^-(2000, 2250) \to e \nu$     
  m_nEventsMap[301091] =     50      ; //    $W^-(2250, 2500) \to e \nu$     
  m_nEventsMap[301092] =     50      ; //    $W^-(2500, 2750) \to e \nu$     
  m_nEventsMap[301093] =     50      ; //    $W^-(2750, 3000) \to e \nu$     
  m_nEventsMap[301094] =     50      ; //    $W^-(3000, 3500) \to e \nu$     
  m_nEventsMap[301095] =     50      ; //    $W^-(3500, 4000) \to e \nu$     
  m_nEventsMap[301096] =     50      ; //    $W^-(4000, 4500) \to e \nu$     
  m_nEventsMap[301097] =     50      ; //    $W^-(4500, 5000) \to e \nu$     
  m_nEventsMap[301098] =     50      ; //    $W^-(>5000) \to e \nu$  

  m_nEventsMap[361101] =     29972   ; //    $W^+ \to \mu \nu$
  m_nEventsMap[361104] =     19984   ; //    $W^- \to \mu \nu$
  m_nEventsMap[301100] =     500     ; //    $W^+(120, 180) \to \mu \nu$     
  m_nEventsMap[301101] =     250     ; //    $W^+(180, 250) \to \mu \nu$     
  m_nEventsMap[301102] =     150     ; //    $W^+(250, 400) \to \mu \nu$     
  m_nEventsMap[301103] =     100     ; //    $W^+(400, 600) \to \mu \nu$     
  m_nEventsMap[301104] =     50      ; //    $W^+(600, 800) \to \mu \nu$     
  m_nEventsMap[301105] =     50      ; //    $W^+(800, 1000) \to \mu \nu$    
  m_nEventsMap[301106] =     50      ; //    $W^+(1000, 1250) \to \mu \nu$   
  m_nEventsMap[301107] =     50      ; //    $W^+(1250, 1500) \to \mu \nu$   
  m_nEventsMap[301108] =     50      ; //    $W^+(1500, 1750) \to \mu \nu$   
  m_nEventsMap[301109] =     50      ; //    $W^+(1750, 2000) \to \mu \nu$   
  m_nEventsMap[301110] =     50      ; //    $W^+(2000, 2250) \to \mu \nu$   
  m_nEventsMap[301111] =     50      ; //    $W^+(2250, 2500) \to \mu \nu$   
  m_nEventsMap[301112] =     50      ; //    $W^+(2500, 2750) \to \mu \nu$   
  m_nEventsMap[301113] =     50      ; //    $W^+(2750, 3000) \to \mu \nu$   
  m_nEventsMap[301114] =     50      ; //    $W^+(3000, 3500) \to \mu \nu$   
  m_nEventsMap[301115] =     50      ; //    $W^+(3500, 4000) \to \mu \nu$   
  m_nEventsMap[301116] =     50      ; //    $W^+(4000, 4500) \to \mu \nu$   
  m_nEventsMap[301117] =     50      ; //    $W^+(4500, 5000) \to \mu \nu$   
  m_nEventsMap[301118] =     50      ; //    $W^+(>5000) \to \mu \nu$ 
  m_nEventsMap[301120] =     500     ; //    $W^-(120, 180) \to \mu \nu$     
  m_nEventsMap[301121] =     250     ; //    $W^-(180, 250) \to \mu \nu$     
  m_nEventsMap[301122] =     150     ; //    $W^-(250, 400) \to \mu \nu$     
  m_nEventsMap[301123] =     100     ; //    $W^-(400, 600) \to \mu \nu$     
  m_nEventsMap[301124] =     50      ; //    $W^-(600, 800) \to \mu \nu$     
  m_nEventsMap[301125] =     50      ; //    $W^-(800, 1000) \to \mu \nu$    
  m_nEventsMap[301126] =     50      ; //    $W^-(1000, 1250) \to \mu \nu$   
  m_nEventsMap[301127] =     50      ; //    $W^-(1250, 1500) \to \mu \nu$   
  m_nEventsMap[301128] =     50      ; //    $W^-(1500, 1750) \to \mu \nu$   
  m_nEventsMap[301129] =     50      ; //    $W^-(1750, 2000) \to \mu \nu$   
  m_nEventsMap[301130] =     50      ; //    $W^-(2000, 2250) \to \mu \nu$   
  m_nEventsMap[301131] =     50      ; //    $W^-(2250, 2500) \to \mu \nu$   
  m_nEventsMap[301132] =     50      ; //    $W^-(2500, 2750) \to \mu \nu$   
  m_nEventsMap[301133] =     50      ; //    $W^-(2750, 3000) \to \mu \nu$   
  m_nEventsMap[301134] =     50      ; //    $W^-(3000, 3500) \to \mu \nu$   
  m_nEventsMap[301135] =     50      ; //    $W^-(3500, 4000) \to \mu \nu$   
  m_nEventsMap[301136] =     50      ; //    $W^-(4000, 4500) \to \mu \nu$   
  m_nEventsMap[301137] =     50      ; //    $W^-(4500, 5000) \to \mu \nu$   
  m_nEventsMap[301138] =     50      ; //    $W^-(>5000) \to \mu \nu$ 
  
  
  m_nEventsMap[301242] = 20; /// Wprime
  m_nEventsMap[301243] = 20; /// Wprime
  m_nEventsMap[301244] = 20; /// Wprime
  m_nEventsMap[301245] = 20; /// Wprime
  m_nEventsMap[301246] = 20; /// Wprime
  m_nEventsMap[301247] = 20; /// Wprime
  m_nEventsMap[301248] = 20; /// Wprime
  m_nEventsMap[301249] = 20; /// Wprime
  
  /// WWxx samples
  m_nEventsMap[304684] = 10;
  m_nEventsMap[304687] = 10;
  m_nEventsMap[304689] = 10;
  m_nEventsMap[304693] = 10;
  m_nEventsMap[304683] = 10;
  m_nEventsMap[304690] = 10;
  m_nEventsMap[304685] = 10;
  m_nEventsMap[304686] = 10;
  m_nEventsMap[304692] = 10;
  m_nEventsMap[304691] = 10;
  m_nEventsMap[304694] = 10;
  m_nEventsMap[304688] = 10;
  
  /// WWxx_Wlv
  m_crossSectionMap[304684] = .0000000003628;
  m_crossSectionMap[304687] = .00000000034905;
  m_crossSectionMap[304689] = .00000000028525;
  m_crossSectionMap[304693] = .00000000001662;
  m_crossSectionMap[304683] = .0000000003628;
  m_crossSectionMap[304690] = .00000000028525;
  m_crossSectionMap[304685] = .00000000036315;
  m_crossSectionMap[304686] = .00000000036315;
  m_crossSectionMap[304692] = .000000000098765;
  m_crossSectionMap[304691] = .000000000098765;
  m_crossSectionMap[304694] = .00000000001662;
  m_crossSectionMap[304688] = .00000000034905;
  
  /// dmV-, dmA-, dmT-Wlv
  m_nEventsMap[304139] = 10;
  m_nEventsMap[304221] = 10;
  m_nEventsMap[304152] = 10;
  m_nEventsMap[304142] = 10;
  m_nEventsMap[304210] = 10;
  m_nEventsMap[304241] = 10;
  m_nEventsMap[304165] = 10;
  m_nEventsMap[304215] = 10;
  m_nEventsMap[304228] = 10;
  m_nEventsMap[304272] = 10;
  m_nEventsMap[304197] = 10;
  m_nEventsMap[304168] = 10;
  m_nEventsMap[304153] = 10;
  m_nEventsMap[304297] = 9;
  m_nEventsMap[304148] = 10;
  m_nEventsMap[304225] = 10;
  m_nEventsMap[304220] = 10;
  m_nEventsMap[304162] = 10;
  m_nEventsMap[304284] = 10;
  m_nEventsMap[304198] = 10;
  m_nEventsMap[304300] = 10;
  m_nEventsMap[304156] = 10;
  m_nEventsMap[304298] = 10;
  m_nEventsMap[304250] = 5;
  m_nEventsMap[304135] = 10;
  m_nEventsMap[304191] = 10;
  m_nEventsMap[304286] = 10;
  m_nEventsMap[304151] = 10;
  m_nEventsMap[304233] = 10;
  m_nEventsMap[304291] = 10;
  m_nEventsMap[304141] = 10;
  m_nEventsMap[304254] = 10;
  m_nEventsMap[304296] = 10;
  m_nEventsMap[304267] = 10;
  m_nEventsMap[304226] = 10;
  m_nEventsMap[304238] = 10;
  m_nEventsMap[304231] = 10;
  m_nEventsMap[304236] = 10;
  m_nEventsMap[304261] = 10;
  m_nEventsMap[304183] = 10;
  m_nEventsMap[304181] = 10;
  m_nEventsMap[304260] = 10;
  m_nEventsMap[304129] = 10;
  m_nEventsMap[304130] = 10;
  m_nEventsMap[304175] = 10;
  m_nEventsMap[304173] = 10;
  m_nEventsMap[304240] = 10;
  m_nEventsMap[304253] = 7;
  m_nEventsMap[304137] = 10;
  m_nEventsMap[304200] = 9;
  m_nEventsMap[304127] = 10;
  m_nEventsMap[304278] = 10;
  m_nEventsMap[304299] = 10;
  m_nEventsMap[304204] = 9;
  m_nEventsMap[304227] = 10;
  m_nEventsMap[304283] = 10;
  m_nEventsMap[304203] = 10;
  m_nEventsMap[304195] = 10;
  m_nEventsMap[304164] = 10;
  m_nEventsMap[304251] = 10;
  m_nEventsMap[304264] = 10;
  m_nEventsMap[304177] = 10;
  m_nEventsMap[304146] = 10;
  m_nEventsMap[304263] = 10;
  m_nEventsMap[304265] = 10;
  m_nEventsMap[304275] = 10;
  m_nEventsMap[304270] = 10;
  m_nEventsMap[304246] = 10;
  m_nEventsMap[304234] = 10;
  m_nEventsMap[304266] = 10;
  m_nEventsMap[304163] = 10;
  m_nEventsMap[304279] = 10;
  m_nEventsMap[304256] = 10;
  m_nEventsMap[304274] = 10;
  m_nEventsMap[304187] = 10;
  m_nEventsMap[304147] = 10;
  m_nEventsMap[304144] = 10;
  m_nEventsMap[304205] = 10;
  m_nEventsMap[304208] = 10;
  m_nEventsMap[304252] = 10;
  m_nEventsMap[304167] = 10;
  m_nEventsMap[304219] = 10;
  m_nEventsMap[304280] = 10;
  m_nEventsMap[304211] = 10;
  m_nEventsMap[304192] = 10;
  m_nEventsMap[304249] = 10;
  m_nEventsMap[304199] = 10;
  m_nEventsMap[304293] = 10;
  m_nEventsMap[304161] = 10;
  m_nEventsMap[304232] = 10;
  m_nEventsMap[304136] = 10;
  m_nEventsMap[304229] = 10;
  m_nEventsMap[304269] = 10;
  m_nEventsMap[304128] = 10;
  m_nEventsMap[304143] = 10;
  m_nEventsMap[304288] = 10;
  m_nEventsMap[304222] = 10;
  m_nEventsMap[304196] = 10;
  m_nEventsMap[304224] = 10;
  m_nEventsMap[304212] = 10;
  m_nEventsMap[304277] = 10;
  m_nEventsMap[304207] = 8;
  m_nEventsMap[304290] = 10;
  m_nEventsMap[304179] = 10;
  m_nEventsMap[304180] = 10;
  m_nEventsMap[304247] = 10;
  m_nEventsMap[304185] = 10;
  m_nEventsMap[304190] = 10;
  m_nEventsMap[304257] = 10;
  m_nEventsMap[304193] = 10;
  m_nEventsMap[304134] = 10;
  m_nEventsMap[304171] = 10;
  m_nEventsMap[304243] = 10;
  m_nEventsMap[304214] = 10;
  m_nEventsMap[304182] = 10;
  m_nEventsMap[304262] = 10;
  m_nEventsMap[304244] = 10;
  m_nEventsMap[304255] = 10;
  m_nEventsMap[304268] = 10;
  m_nEventsMap[304201] = 10;
  m_nEventsMap[304166] = 10;
  m_nEventsMap[304287] = 10;
  m_nEventsMap[304206] = 10;
  m_nEventsMap[304289] = 10;
  m_nEventsMap[304178] = 10;
  m_nEventsMap[304245] = 9;
  m_nEventsMap[304248] = 10;
  m_nEventsMap[304202] = 10;
  m_nEventsMap[304172] = 10;
  m_nEventsMap[304159] = 9;
  m_nEventsMap[304218] = 10;
  m_nEventsMap[304140] = 10;
  m_nEventsMap[304216] = 10;
  m_nEventsMap[304184] = 10;
  m_nEventsMap[304209] = 4;
  m_nEventsMap[304292] = 10;
  m_nEventsMap[304217] = 10;
  m_nEventsMap[304235] = 10;
  m_nEventsMap[304169] = 10;
  m_nEventsMap[304174] = 10;
  m_nEventsMap[304170] = 10;
  m_nEventsMap[304150] = 10;
  m_nEventsMap[304239] = 10;
  m_nEventsMap[304259] = 9;
  m_nEventsMap[304223] = 10;
  m_nEventsMap[304176] = 10;
  m_nEventsMap[304132] = 10;
  m_nEventsMap[304281] = 10;
  m_nEventsMap[304131] = 9;
  m_nEventsMap[304276] = 10;
  m_nEventsMap[304188] = 10;
  m_nEventsMap[304186] = 10;
  m_nEventsMap[304189] = 10;
  m_nEventsMap[304273] = 10;
  m_nEventsMap[304158] = 10;
  m_nEventsMap[304138] = 9;
  m_nEventsMap[304285] = 10;
  m_nEventsMap[304213] = 10;
  m_nEventsMap[304149] = 10;
  m_nEventsMap[304295] = 10;
  m_nEventsMap[304237] = 10;
  m_nEventsMap[304154] = 10;
  m_nEventsMap[304145] = 10;
  m_nEventsMap[304282] = 10;
  m_nEventsMap[304230] = 10;
  m_nEventsMap[304133] = 10;
  m_nEventsMap[304271] = 10;
  m_nEventsMap[304242] = 10;
  m_nEventsMap[304155] = 10;
  m_nEventsMap[304194] = 10;
  m_nEventsMap[304157] = 10;
  m_nEventsMap[304160] = 10;
  m_nEventsMap[304294] = 10;
  m_nEventsMap[304258] = 10;

  /// dmV-, dmA-, dmT-Wlv
  m_crossSectionMap[304139] = .000073255;
  m_crossSectionMap[304221] = .000337;
  m_crossSectionMap[304152] = .005885;
  m_crossSectionMap[304142] = .00000964;
  m_crossSectionMap[304210] = .0002643;
  m_crossSectionMap[304241] = .00001338;
  m_crossSectionMap[304165] = .00026225;
  m_crossSectionMap[304215] = .00000063315;
  m_crossSectionMap[304228] = .00000000007474;
  m_crossSectionMap[304272] = .001889;
  m_crossSectionMap[304197] = .00000000001524;
  m_crossSectionMap[304168] = .000000000074365;
  m_crossSectionMap[304153] = .001987;
  m_crossSectionMap[304297] = .00000001103;
  m_crossSectionMap[304148] = .0005144;
  m_crossSectionMap[304225] = .0019285;
  m_crossSectionMap[304220] = .00027375;
  m_crossSectionMap[304162] = .0001681;
  m_crossSectionMap[304284] = .000000048685;
  m_crossSectionMap[304198] = .00000000001521;
  m_crossSectionMap[304300] = .000000003292;
  m_crossSectionMap[304156] = .00000000007489;
  m_crossSectionMap[304298] = .00000001103;
  m_crossSectionMap[304250] = .0000089425;
  m_crossSectionMap[304135] = .0005963;
  m_crossSectionMap[304191] = .000000002514;
  m_crossSectionMap[304286] = .000122;
  m_crossSectionMap[304151] = .0058855;
  m_crossSectionMap[304233] = .00003853;
  m_crossSectionMap[304291] = .0000002828;
  m_crossSectionMap[304141] = .0000096365;
  m_crossSectionMap[304254] = .000002801;
  m_crossSectionMap[304296] = .000000017015;
  m_crossSectionMap[304267] = .0000000080675;
  m_crossSectionMap[304226] = .00193;
  m_crossSectionMap[304238] = .00024025;
  m_crossSectionMap[304231] = .00001729;
  m_crossSectionMap[304236] = .00047045;
  m_crossSectionMap[304261] = .000000000025065;
  m_crossSectionMap[304183] = .000000089475;
  m_crossSectionMap[304181] = .000000063745;
  m_crossSectionMap[304260] = .00000045875;
  m_crossSectionMap[304129] = .021805;
  m_crossSectionMap[304130] = .0218;
  m_crossSectionMap[304175] = .00006988;
  m_crossSectionMap[304173] = .000038815;
  m_crossSectionMap[304240] = .00000000007201;
  m_crossSectionMap[304253] = .0000027985;
  m_crossSectionMap[304137] = .0002645;
  m_crossSectionMap[304200] = .053385;
  m_crossSectionMap[304127] = .05181;
  m_crossSectionMap[304278] = .000010145;
  m_crossSectionMap[304299] = .000000003291;
  m_crossSectionMap[304204] = .005958;
  m_crossSectionMap[304227] = .000000000074665;
  m_crossSectionMap[304283] = .00000004874;
  m_crossSectionMap[304203] = .005954;
  m_crossSectionMap[304195] = .00000012715;
  m_crossSectionMap[304164] = .00058405;
  m_crossSectionMap[304251] = .00000000005995;
  m_crossSectionMap[304264] = .0000003559;
  m_crossSectionMap[304177] = .0000095365;
  m_crossSectionMap[304146] = .000000000074715;
  m_crossSectionMap[304263] = .00000035595;
  m_crossSectionMap[304265] = .00000000084795;
  m_crossSectionMap[304275] = .00009232;
  m_crossSectionMap[304270] = .0000000000063405;
  m_crossSectionMap[304246] = .0000049925;
  m_crossSectionMap[304234] = .00003856;
  m_crossSectionMap[304266] = .00000000084835;
  m_crossSectionMap[304163] = .0005846;
  m_crossSectionMap[304279] = .0000029485;
  m_crossSectionMap[304256] = .000000026585;
  m_crossSectionMap[304274] = .0002809;
  m_crossSectionMap[304187] = .00000059335;
  m_crossSectionMap[304147] = .00051475;
  m_crossSectionMap[304144] = .0000006303;
  m_crossSectionMap[304205] = .0019905;
  m_crossSectionMap[304208] = .0005973;
  m_crossSectionMap[304252] = .00000000005993;
  m_crossSectionMap[304167] = .00000000007445;
  m_crossSectionMap[304219] = .0002739;
  m_crossSectionMap[304280] = .000002944;
  m_crossSectionMap[304211] = .000076985;
  m_crossSectionMap[304192] = .0000000025155;
  m_crossSectionMap[304249] = .000008926;
  m_crossSectionMap[304199] = .053385;
  m_crossSectionMap[304293] = .000000097295;
  m_crossSectionMap[304161] = .00016835;
  m_crossSectionMap[304232] = .000017295;
  m_crossSectionMap[304136] = .0005965;
  m_crossSectionMap[304229] = .000028185;
  m_crossSectionMap[304269] = .000000000006337;
  m_crossSectionMap[304128] = .051805;
  m_crossSectionMap[304143] = .00000063065;
  m_crossSectionMap[304288] = .000020345;
  m_crossSectionMap[304222] = .0003367;
  m_crossSectionMap[304196] = .0000001273;
  m_crossSectionMap[304224] = .005209;
  m_crossSectionMap[304212] = .00007691;
  m_crossSectionMap[304277] = .000010145;
  m_crossSectionMap[304207] = .0005958;
  m_crossSectionMap[304290] = .0000091185;
  m_crossSectionMap[304179] = .00000000006992;
  m_crossSectionMap[304180] = .000000000069755;
  m_crossSectionMap[304247] = .0000516;
  m_crossSectionMap[304185] = .0000020095;
  m_crossSectionMap[304190] = .00000000004183;
  m_crossSectionMap[304257] = .0000001629;
  m_crossSectionMap[304193] = .000000003686;
  m_crossSectionMap[304134] = .0019865;
  m_crossSectionMap[304171] = .000004827;
  m_crossSectionMap[304243] = .0000017245;
  m_crossSectionMap[304214] = .0000097925;
  m_crossSectionMap[304182] = .00000006379;
  m_crossSectionMap[304262] = .000000000025005;
  m_crossSectionMap[304244] = .0000017275;
  m_crossSectionMap[304255] = .000000026595;
  m_crossSectionMap[304268] = .0000000080565;
  m_crossSectionMap[304201] = .022395;
  m_crossSectionMap[304166] = .00026205;
  m_crossSectionMap[304287] = .00002035;
  m_crossSectionMap[304206] = .0019885;
  m_crossSectionMap[304289] = .000009118;
  m_crossSectionMap[304178] = .000009557;
  m_crossSectionMap[304245] = .0000049905;
  m_crossSectionMap[304248] = .00005153;
  m_crossSectionMap[304202] = .022385;
  m_crossSectionMap[304172] = .000004828;
  m_crossSectionMap[304159] = .00003742;
  m_crossSectionMap[304218] = .00000000007473;
  m_crossSectionMap[304140] = .00007327;
  m_crossSectionMap[304216] = .0000006333;
  m_crossSectionMap[304184] = .00000008954;
  m_crossSectionMap[304209] = .0002644;
  m_crossSectionMap[304292] = .0000002829;
  m_crossSectionMap[304217] = .00000000007472;
  m_crossSectionMap[304235] = .0004719;
  m_crossSectionMap[304169] = .0000027595;
  m_crossSectionMap[304174] = .000038845;
  m_crossSectionMap[304170] = .00000276;
  m_crossSectionMap[304150] = .0007514;
  m_crossSectionMap[304239] = .000000000072035;
  m_crossSectionMap[304259] = .0000004589;
  m_crossSectionMap[304223] = .005212;
  m_crossSectionMap[304176] = .000069965;
  m_crossSectionMap[304132] = .005925;
  m_crossSectionMap[304281] = .00000043385;
  m_crossSectionMap[304131] = .005926;
  m_crossSectionMap[304276] = .00009231;
  m_crossSectionMap[304188] = .0000005928;
  m_crossSectionMap[304186] = .000002012;
  m_crossSectionMap[304189] = .00000000004173;
  m_crossSectionMap[304273] = .0002812;
  m_crossSectionMap[304158] = .00002964;
  m_crossSectionMap[304138] = .00026445;
  m_crossSectionMap[304285] = .00012195;
  m_crossSectionMap[304213] = .000009787;
  m_crossSectionMap[304149] = .0007505;
  m_crossSectionMap[304295] = .000000017015;
  m_crossSectionMap[304237] = .0002403;
  m_crossSectionMap[304154] = .0019885;
  m_crossSectionMap[304145] = .00000000007476;
  m_crossSectionMap[304282] = .0000004348;
  m_crossSectionMap[304230] = .00002822;
  m_crossSectionMap[304133] = .001989;
  m_crossSectionMap[304271] = .0018895;
  m_crossSectionMap[304242] = .000013385;
  m_crossSectionMap[304155] = .00000000007481;
  m_crossSectionMap[304194] = .0000000036835;
  m_crossSectionMap[304157] = .00002964;
  m_crossSectionMap[304160] = .000037425;
  m_crossSectionMap[304294] = .0000000973;
  m_crossSectionMap[304258] = .00000016275;

  /// mc14_13TeV DM D5c samples
  m_nEventsMap[158838] = 39;
  m_crossSectionMap[158838] = .0004383;
  m_nEventsMap[158839] = 30;
  m_crossSectionMap[158839] = .000428;
  m_nEventsMap[158843] = 40;
  m_crossSectionMap[158843] = .0000396;
  
}

TruthHelper::~TruthHelper(){}

double TruthHelper::getnEventsPerSample(unsigned int datasetID){
        
  try{
    return m_nEventsMap[datasetID]*1000;
  }
  catch(const std::out_of_range& oor){
    std::cout<<"getnEventsPerSample: Failed to find nEvents for dataset"
    " ID " << datasetID;
  }
  return 0.0;
        
}

double TruthHelper::getCrossSection(unsigned int datasetID){
        
  try{
    return m_crossSectionMap[datasetID]; /// WARNING do we need to scale xsec?
  }
  catch(const std::out_of_range& oor){
    std::cout<<"getCrossSection: Failed to find crossSection for dataset"
    " ID " << datasetID;
  }
  return 0.0;
        
}
